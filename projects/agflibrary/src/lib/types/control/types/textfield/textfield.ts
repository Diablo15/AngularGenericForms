import { IControl, ITextField } from '../../interfaces';
import { ValidatorFn, AsyncValidatorFn } from '@angular/forms';
import { FormHooks } from '@angular/forms/src/model';
import { InputType } from '../input/input.type';
import { ControlTypes } from '../../enum';

export class TextField implements IControl, ITextField {

    /**
     * Creates an instance of TextField.
     * @param controlName Name of your control
     * @param value Preset value
     * @param validators Local validators
     * @param AsyncValidatorFn[]} asyncValidators Async Validators
     * @param updateOn Event trigger
     * @param tabIndex Tab index
     * @param type HTML element type
     * @param placeholder Default value for placeholder
     * @param minlength Minimal input value
     * @param maxLength Maximum input value
     * @param pattern Regex patrn generated by min and max length
     * @param [htmlClass='form-control'] Style class. Default is form-control from bootstrap
     * @param controlType Enum that define the diffrent control types
     * @param disabled if the control is disabled or not.
     * @memberof TextField
     */
    constructor(
        public controlName: string,
        public value: string,
        public validators: ValidatorFn[],
        public asyncValidators: AsyncValidatorFn[],
        public updateOn: FormHooks,
        public tabIndex: number,
        public type: InputType,
        public placeholder: string,
        public minlength: number,
        public maxLength: number,
        public pattern: RegExp,
        public htmlClass: string = 'form-control',
        public controlType: ControlTypes,
        public disabled: boolean) {}
}
